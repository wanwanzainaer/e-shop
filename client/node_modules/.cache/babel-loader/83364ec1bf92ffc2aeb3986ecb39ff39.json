{"ast":null,"code":"import _defineProperty from \"/Users/simon/react/2020-react/e-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Types from \"../actions/types\";\nconst INITIAL_STATE = {\n  collections: {},\n  isFetching: true,\n  errorMessage: undefined\n};\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case Types.FETCH_COLLECTIONS_START:\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case Types.FETCH_COLLECTIONS_SUCCESS:\n      return _objectSpread({}, state, {\n        collections: action.payload,\n        isFetching: false\n      });\n\n    case Types.FETCH_COLLECTIONS_FAILURE:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        errorMessage: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/simon/react/2020-react/e-shop/client/src/redux/reducers/shopReducer.js"],"names":["Types","INITIAL_STATE","collections","isFetching","errorMessage","undefined","state","action","type","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","payload","FETCH_COLLECTIONS_FAILURE"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAE,EADO;AAEpBC,EAAAA,UAAU,EAAE,IAFQ;AAGpBC,EAAAA,YAAY,EAAEC;AAHM,CAAtB;AAMA,gBAAe,CAACC,KAAK,GAAGL,aAAT,EAAwBM,MAAxB,KAAmC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,KAAK,CAACS,uBAAX;AACE,+BAAYH,KAAZ;AAAmBH,QAAAA,UAAU,EAAE;AAA/B;;AACF,SAAKH,KAAK,CAACU,yBAAX;AACE,+BACKJ,KADL;AAEEJ,QAAAA,WAAW,EAAEK,MAAM,CAACI,OAFtB;AAGER,QAAAA,UAAU,EAAE;AAHd;;AAKF,SAAKH,KAAK,CAACY,yBAAX;AACE,+BACKN,KADL;AAEEH,QAAAA,UAAU,EAAE,KAFd;AAGEC,QAAAA,YAAY,EAAEG,MAAM,CAACI;AAHvB;;AAKF;AACE,aAAOL,KAAP;AAhBJ;AAkBD,CAnBD","sourcesContent":["import Types from \"../actions/types\";\nconst INITIAL_STATE = {\n  collections: {},\n  isFetching: true,\n  errorMessage: undefined\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case Types.FETCH_COLLECTIONS_START:\n      return { ...state, isFetching: true };\n    case Types.FETCH_COLLECTIONS_SUCCESS:\n      return {\n        ...state,\n        collections: action.payload,\n        isFetching: false\n      };\n    case Types.FETCH_COLLECTIONS_FAILURE:\n      return {\n        ...state,\n        isFetching: false,\n        errorMessage: action.payload\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}