{"ast":null,"code":"var _jsxFileName = \"/Users/simon/react/2020-react/e-shop/client/src/pages/shop/Shop.js\";\nimport React, { useEffect, lazy, Suspense } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchCollectionsStart } from \"../../redux/actions/shopAction\";\nimport Spinner from \"../../components/spinner/Spinner\";\nconst CollectionContainer = lazy(() => import(\"../../pages/collection/CollectionContainer\"));\nconst CollectionOverviewContainer = lazy(() => import(\"../../components/collection-overview/CollectionOverviewContainer\")); // import CollectionOverview from \"../../components/collection-overview/CollectionOverview\";\n\nconst Shop = ({\n  match,\n  fetchCollectionsStart\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]);\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Suspense, {\n    fallback: React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"\".concat(match.path),\n    component: CollectionOverviewContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"\".concat(match.path, \"/:collectionId\"),\n    component: CollectionContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })));\n}; // const mapStateToProps = createStructuredSelector({\n//   isloading: selectIsCollectionFetching\n// });\n\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Users/simon/react/2020-react/e-shop/client/src/pages/shop/Shop.js"],"names":["React","useEffect","lazy","Suspense","Route","connect","fetchCollectionsStart","Spinner","CollectionContainer","CollectionOverviewContainer","Shop","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,IAA3B,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,gCAAtC;AACA,OAAOC,OAAP,MAAoB,kCAApB;AAEA,MAAMC,mBAAmB,GAAGN,IAAI,CAAC,MAC/B,OAAO,4CAAP,CAD8B,CAAhC;AAGA,MAAMO,2BAA2B,GAAGP,IAAI,CAAC,MACvC,OAAO,kEAAP,CADsC,CAAxC,C,CAGA;;AAEA,MAAMQ,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASL,EAAAA;AAAT,CAAD,KAAsC;AACjDL,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,qBAAqB;AACtB,GAFQ,EAEN,CAACA,qBAAD,CAFM,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,YAAKK,KAAK,CAACC,IAAX,CAFN;AAGE,IAAA,SAAS,EAAEH,2BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,KAAD;AACE,IAAA,IAAI,YAAKE,KAAK,CAACC,IAAX,mBADN;AAEE,IAAA,SAAS,EAAEJ,mBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CADF;AAeD,CApBD,C,CAqBA;AACA;AACA;;;AAEA,MAAMK,kBAAkB,GAAGC,QAAQ,KAAK;AACtCR,EAAAA,qBAAqB,EAAE,MAAMQ,QAAQ,CAACR,qBAAqB,EAAtB;AADC,CAAL,CAAnC;;AAGA,eAAeD,OAAO,CAAC,IAAD,EAAOQ,kBAAP,CAAP,CAAkCH,IAAlC,CAAf","sourcesContent":["import React, { useEffect, lazy, Suspense } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchCollectionsStart } from \"../../redux/actions/shopAction\";\nimport Spinner from \"../../components/spinner/Spinner\";\n\nconst CollectionContainer = lazy(() =>\n  import(\"../../pages/collection/CollectionContainer\")\n);\nconst CollectionOverviewContainer = lazy(() =>\n  import(\"../../components/collection-overview/CollectionOverviewContainer\")\n);\n// import CollectionOverview from \"../../components/collection-overview/CollectionOverview\";\n\nconst Shop = ({ match, fetchCollectionsStart }) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]);\n\n  return (\n    <div className=\"shop-page\">\n      <Suspense fallback={<Spinner />}>\n        <Route\n          exact\n          path={`${match.path}`}\n          component={CollectionOverviewContainer}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionContainer}\n        />\n      </Suspense>\n    </div>\n  );\n};\n// const mapStateToProps = createStructuredSelector({\n//   isloading: selectIsCollectionFetching\n// });\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\nexport default connect(null, mapDispatchToProps)(Shop);\n"]},"metadata":{},"sourceType":"module"}