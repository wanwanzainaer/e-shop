{"ast":null,"code":"import _defineProperty from \"/Users/simon/react/2020-react/e-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Types from \"../actions/types\";\nimport { addItemToCart, removeItemFromCart } from \"../reducers/cart.urils\";\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case Types.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case Types.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n\n    case Types.CLEAR_ITEM_FROM_CART:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      });\n\n    case Types.REMOVE_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      });\n\n    case Types.CLEAR_CART:\n      return _objectSpread({}, state, {\n        cartItems: []\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/simon/react/2020-react/e-shop/client/src/redux/reducers/cartReducer.js"],"names":["Types","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","CLEAR_ITEM_FROM_CART","filter","cartItem","id","REMOVE_ITEM","CLEAR_CART"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SACEC,aADF,EAEEC,kBAFF,QAGO,wBAHP;AAKA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;AAKA,gBAAe,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,KAAK,CAACS,kBAAX;AACE,+BACKH,KADL;AAEEF,QAAAA,MAAM,EAAE,CAACE,KAAK,CAACF;AAFjB;;AAIF,SAAKJ,KAAK,CAACU,QAAX;AACE,+BACKJ,KADL;AAEED,QAAAA,SAAS,EAAEJ,aAAa,CAACK,KAAK,CAACD,SAAP,EAAkBE,MAAM,CAACI,OAAzB;AAF1B;;AAIF,SAAKX,KAAK,CAACY,oBAAX;AACE,+BACKN,KADL;AAEED,QAAAA,SAAS,EAAEC,KAAK,CAACD,SAAN,CAAgBQ,MAAhB,CACTC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBR,MAAM,CAACI,OAAP,CAAeI,EADlC;AAFb;;AAMF,SAAKf,KAAK,CAACgB,WAAX;AACE,+BACKV,KADL;AAEED,QAAAA,SAAS,EAAEH,kBAAkB,CAACI,KAAK,CAACD,SAAP,EAAkBE,MAAM,CAACI,OAAzB;AAF/B;;AAIF,SAAKX,KAAK,CAACiB,UAAX;AACE,+BACKX,KADL;AAEED,QAAAA,SAAS,EAAE;AAFb;;AAIF;AACE,aAAOC,KAAP;AA7BJ;AA+BD,CAhCD","sourcesContent":["import Types from \"../actions/types\";\nimport {\n  addItemToCart,\n  removeItemFromCart\n} from \"../reducers/cart.urils\";\n\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case Types.TOGGLE_CART_HIDDEN:\n      return {\n        ...state,\n        hidden: !state.hidden\n      };\n    case Types.ADD_ITEM:\n      return {\n        ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n    case Types.CLEAR_ITEM_FROM_CART:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(\n          cartItem => cartItem.id !== action.payload.id\n        )\n      };\n    case Types.REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      };\n    case Types.CLEAR_CART:\n      return {\n        ...state,\n        cartItems: []\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}