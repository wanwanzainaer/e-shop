{"ast":null,"code":"var _jsxFileName = \"/Users/simon/react/2020-react/e-shop/client/src/pages/shop/Shop.js\";\nimport React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CollectionContainer from \"../../pages/collection/CollectionContainer\";\nimport CollectionOverviewContainer from \"../../components/collection-overview/CollectionOverviewContainer\"; // import CollectionOverview from \"../../components/collection-overview/CollectionOverview\";\n\nimport { fetchCollectionsStart } from \"../../redux/actions/shopAction\"; // const CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\n// const CollectionPageWithSpinner = WithSpinner(Collection);\n\nconst Shop = ({\n  match,\n  fetchCollectionsStart\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart(); // Google firebase Observable pattern\n    // let unsub = collectionRef.onSnapshot(async snapshot => {\n    //   const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n    //   updateCollectionsData(collectionMap);\n    //   setState({ loading: false });\n    // });\n    // return function cleanUp() {\n    //   unsub();\n    // };\n  }, [fetchCollectionsStart]);\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"\".concat(match.path),\n    component: CollectionOverviewContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"\".concat(match.path, \"/:collectionId\"),\n    component: CollectionContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n}; // const mapStateToProps = createStructuredSelector({\n//   isloading: selectIsCollectionFetching\n// });\n\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Users/simon/react/2020-react/e-shop/client/src/pages/shop/Shop.js"],"names":["React","useEffect","Route","connect","CollectionContainer","CollectionOverviewContainer","fetchCollectionsStart","Shop","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,4CAAhC;AACA,OAAOC,2BAAP,MAAwC,kEAAxC,C,CACA;;AAEA,SAASC,qBAAT,QAAsC,gCAAtC,C,CAEA;AACA;;AACA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASF,EAAAA;AAAT,CAAD,KAAsC;AACjDL,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,qBAAqB,GADP,CAEd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAXQ,EAWN,CAACA,qBAAD,CAXM,CAAT;AAaA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,YAAKE,KAAK,CAACC,IAAX,CAFN;AAGE,IAAA,SAAS,EAAEJ,2BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,KAAD;AACE,IAAA,IAAI,YAAKG,KAAK,CAACC,IAAX,mBADN;AAEE,IAAA,SAAS,EAAEL,mBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAaD,CA3BD,C,CA4BA;AACA;AACA;;;AAEA,MAAMM,kBAAkB,GAAGC,QAAQ,KAAK;AACtCL,EAAAA,qBAAqB,EAAE,MAAMK,QAAQ,CAACL,qBAAqB,EAAtB;AADC,CAAL,CAAnC;;AAGA,eAAeH,OAAO,CACpB,IADoB,EAEpBO,kBAFoB,CAAP,CAGbH,IAHa,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport CollectionContainer from \"../../pages/collection/CollectionContainer\";\nimport CollectionOverviewContainer from \"../../components/collection-overview/CollectionOverviewContainer\";\n// import CollectionOverview from \"../../components/collection-overview/CollectionOverview\";\n\nimport { fetchCollectionsStart } from \"../../redux/actions/shopAction\";\n\n// const CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\n// const CollectionPageWithSpinner = WithSpinner(Collection);\nconst Shop = ({ match, fetchCollectionsStart }) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n    // Google firebase Observable pattern\n    // let unsub = collectionRef.onSnapshot(async snapshot => {\n    //   const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n    //   updateCollectionsData(collectionMap);\n    //   setState({ loading: false });\n    // });\n    // return function cleanUp() {\n    //   unsub();\n    // };\n  }, [fetchCollectionsStart]);\n\n  return (\n    <div className=\"shop-page\">\n      <Route\n        exact\n        path={`${match.path}`}\n        component={CollectionOverviewContainer}\n      />\n      <Route\n        path={`${match.path}/:collectionId`}\n        component={CollectionContainer}\n      />\n    </div>\n  );\n};\n// const mapStateToProps = createStructuredSelector({\n//   isloading: selectIsCollectionFetching\n// });\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Shop);\n"]},"metadata":{},"sourceType":"module"}