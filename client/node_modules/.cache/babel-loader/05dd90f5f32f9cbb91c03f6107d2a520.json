{"ast":null,"code":"import Types from \"./types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionsStart = data => {\n  return {\n    type: Types.FETCH_COLLECTIONS_START\n  };\n};\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: Types.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = () => ({\n  type: Types.FETCH_COLLECTIONS_FAILURE,\n  payload: \"Server has some problem\"\n});\nexport const fetchCollectionsStartAsync = () => async dispatch => {\n  const collectionRef = firestore.collection(\"collections\");\n  dispatch(fetchCollectionsStart());\n\n  try {\n    const snapshotResponse = await collectionRef.get();\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshotResponse);\n    console.log(collectionsMap);\n    return dispatch(fetchCollectionsSuccess(collectionsMap));\n  } catch (err) {\n    return dispatch(fetchCollectionsFailure());\n  }\n};","map":{"version":3,"sources":["/Users/simon/react/2020-react/e-shop/client/src/redux/actions/shopAction.js"],"names":["Types","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","data","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","snapshotResponse","get","console","log","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAGC,IAAI,IAAI;AAC3C,SAAO;AACLC,IAAAA,IAAI,EAAEL,KAAK,CAACM;AADP,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACxDH,EAAAA,IAAI,EAAEL,KAAK,CAACS,yBAD4C;AAExDC,EAAAA,OAAO,EAAEF;AAF+C,CAAL,CAA9C;AAKP,OAAO,MAAMG,uBAAuB,GAAG,OAAO;AAC5CN,EAAAA,IAAI,EAAEL,KAAK,CAACY,yBADgC;AAE5CF,EAAAA,OAAO,EAAE;AAFmC,CAAP,CAAhC;AAIP,OAAO,MAAMG,0BAA0B,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAChE,QAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,EAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;;AACA,MAAI;AACF,UAAMc,gBAAgB,GAAG,MAAMF,aAAa,CAACG,GAAd,EAA/B;AACA,UAAMV,cAAc,GAAGN,+BAA+B,CACpDe,gBADoD,CAAtD;AAGAE,IAAAA,OAAO,CAACC,GAAR,CAAYZ,cAAZ;AACA,WAAOM,QAAQ,CAACP,uBAAuB,CAACC,cAAD,CAAxB,CAAf;AACD,GAPD,CAOE,OAAOa,GAAP,EAAY;AACZ,WAAOP,QAAQ,CAACH,uBAAuB,EAAxB,CAAf;AACD;AACF,CAbM","sourcesContent":["import Types from \"./types\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from \"../../firebase/firebase.utils\";\n\nexport const fetchCollectionsStart = data => {\n  return {\n    type: Types.FETCH_COLLECTIONS_START\n  };\n};\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: Types.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\n\nexport const fetchCollectionsFailure = () => ({\n  type: Types.FETCH_COLLECTIONS_FAILURE,\n  payload: \"Server has some problem\"\n});\nexport const fetchCollectionsStartAsync = () => async dispatch => {\n  const collectionRef = firestore.collection(\"collections\");\n  dispatch(fetchCollectionsStart());\n  try {\n    const snapshotResponse = await collectionRef.get();\n    const collectionsMap = convertCollectionsSnapshotToMap(\n      snapshotResponse\n    );\n    console.log(collectionsMap);\n    return dispatch(fetchCollectionsSuccess(collectionsMap));\n  } catch (err) {\n    return dispatch(fetchCollectionsFailure());\n  }\n};\n"]},"metadata":{},"sourceType":"module"}