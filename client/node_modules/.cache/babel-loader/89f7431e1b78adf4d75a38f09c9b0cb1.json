{"ast":null,"code":"import _defineProperty from \"/Users/simon/react/2020-react/e-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/simon/react/2020-react/e-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/simon/react/2020-react/e-shop/client/src/components/sign-up/Sign-up.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./Sign-up.scss\";\nimport FormInput from \"../form-input/FormInput\";\nimport CustomButton from \"../custom-button/CustomButton\";\nimport { signUpStart } from \"../../redux/actions/userAction\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const _useState = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const displayName = state.displayName,\n          password = state.password,\n          confirmPassword = state.confirmPassword,\n          email = state.email;\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      password,\n      email\n    });\n  };\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          value = _e$target.value,\n          name = _e$target.name;\n    setState(state => _objectSpread({}, state, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"titlle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"I do not have account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: state.email,\n    required: true,\n    handlChange: handleChange,\n    label: \"Email\",\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), \" \", React.createElement(FormInput, {\n    name: \"displayName\",\n    type: \"displayName\",\n    value: state.displayName,\n    required: true,\n    handlChange: handleChange,\n    label: \"Name\",\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), \" \", React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: state.password,\n    required: true,\n    handlChange: handleChange,\n    label: \"Password\",\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), \" \", React.createElement(FormInput, {\n    name: \"confirmPassword\",\n    type: \"password\",\n    value: state.confirmPassword,\n    required: true,\n    handlChange: handleChange,\n    label: \"Confirm Password\",\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Sign Up\")));\n};\n\nexport default connect(null, {\n  signUpStart\n})(SignUp);","map":{"version":3,"sources":["/Users/simon/react/2020-react/e-shop/client/src/components/sign-up/Sign-up.js"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","displayName","email","password","confirmPassword","state","setState","handleSubmit","e","preventDefault","alert","handleChange","target","value","name"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./Sign-up.scss\";\nimport FormInput from \"../form-input/FormInput\";\nimport CustomButton from \"../custom-button/CustomButton\";\nimport { signUpStart } from \"../../redux/actions/userAction\";\n\nconst SignUp = ({ signUpStart }) => {\n  const [state, setState] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const { displayName, password, confirmPassword, email } = state;\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n    signUpStart({ displayName, password, email });\n  };\n\n  const handleChange = e => {\n    const { value, name } = e.target;\n    setState(state => ({ ...state, [name]: value }));\n  };\n  return (\n    <div className=\"sign-up\" onSubmit={handleSubmit}>\n      <h2 className=\"titlle\">I do not have account</h2>\n      <span>Sign up with your email and password</span>\n      <form className=\"sign-up-form\">\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          value={state.email}\n          required\n          handlChange={handleChange}\n          label=\"Email\"\n          autoComplete=\"off\"\n        />{\" \"}\n        <FormInput\n          name=\"displayName\"\n          type=\"displayName\"\n          value={state.displayName}\n          required\n          handlChange={handleChange}\n          label=\"Name\"\n          autoComplete=\"off\"\n        />{\" \"}\n        <FormInput\n          name=\"password\"\n          type=\"password\"\n          value={state.password}\n          required\n          handlChange={handleChange}\n          label=\"Password\"\n          autoComplete=\"off\"\n        />{\" \"}\n        <FormInput\n          name=\"confirmPassword\"\n          type=\"password\"\n          value={state.confirmPassword}\n          required\n          handlChange={handleChange}\n          label=\"Confirm Password\"\n          autoComplete=\"off\"\n        />\n        <CustomButton type=\"submit\">Sign Up</CustomButton>\n      </form>\n    </div>\n  );\n};\n\nexport default connect(null, { signUpStart })(SignUp);\n"]},"metadata":{},"sourceType":"module"}