{"ast":null,"code":"import _defineProperty from \"/Users/simon/react/2020-react/e-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/simon/react/2020-react/e-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/simon/react/2020-react/e-shop/client/src/components/sign-in/Sign-in.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport FormInput from \"../form-input/FormInput\";\nimport \"./Sign-in.scss\";\nimport CustomButton from \"../custom-button/CustomButton\";\nimport { connect } from \"react-redux\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/actions/userAction\";\n\nconst SignIn = ({\n  googleSignInStart,\n  emailSignInStart\n}) => {\n  const _useState = useState({\n    email: \"\",\n    password: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const email = state.email,\n          password = state.password;\n    emailSignInStart({\n      email,\n      password\n    });\n  };\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          value = _e$target.value,\n          name = _e$target.name;\n    setState(state => _objectSpread({}, state, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"I already have account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Sign In with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: state.email,\n    required: true,\n    handlChange: handleChange,\n    label: \"Email\",\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: state.password,\n    required: true,\n    handlChange: handleChange,\n    label: \"Password\",\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Sign In\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Sign in with Google\"))));\n};\n\nexport default connect(null, {\n  googleSignInStart,\n  emailSignInStart\n})(SignIn);","map":{"version":3,"sources":["/Users/simon/react/2020-react/e-shop/client/src/components/sign-in/Sign-in.js"],"names":["React","useState","FormInput","CustomButton","connect","googleSignInStart","emailSignInStart","SignIn","email","password","state","setState","handleSubmit","e","preventDefault","handleChange","target","value","name"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,gBAAP;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,iBADF,EAEEC,gBAFF,QAGO,gCAHP;;AAKA,MAAMC,MAAM,GAAG,CAAC;AAAEF,EAAAA,iBAAF;AAAqBC,EAAAA;AAArB,CAAD,KAA6C;AAAA,oBAChCL,QAAQ,CAAC;AAAEO,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CADwB;AAAA;AAAA,QACnDC,KADmD;AAAA,QAC5CC,QAD4C;;AAG1D,QAAMC,YAAY,GAAG,MAAMC,CAAN,IAAW;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AAD8B,UAEtBN,KAFsB,GAEFE,KAFE,CAEtBF,KAFsB;AAAA,UAEfC,QAFe,GAEFC,KAFE,CAEfD,QAFe;AAG9BH,IAAAA,gBAAgB,CAAC;AAAEE,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,CAAhB;AACD,GAJD;;AAMA,QAAMM,YAAY,GAAGF,CAAC,IAAI;AAAA,sBACAA,CAAC,CAACG,MADF;AAAA,UAChBC,KADgB,aAChBA,KADgB;AAAA,UACTC,IADS,aACTA,IADS;AAExBP,IAAAA,QAAQ,CAACD,KAAK,sBAAUA,KAAV;AAAiB,OAACQ,IAAD,GAAQD;AAAzB,MAAN,CAAR;AACD,GAHD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFF,EAGE;AAAM,IAAA,QAAQ,EAAEL,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAEF,KAAK,CAACF,KAHf;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,WAAW,EAAEO,YALf;AAME,IAAA,KAAK,EAAC,OANR;AAOE,IAAA,YAAY,EAAC,KAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEL,KAAK,CAACD,QAHf;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,WAAW,EAAEM,YALf;AAME,IAAA,KAAK,EAAC,UANR;AAOE,IAAA,YAAY,EAAC,KAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAmBE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAEV,iBAFX;AAGE,IAAA,cAAc,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,CAnBF,CAHF,CADF;AAoCD,CAjDD;;AAmDA,eAAeD,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA,iBAAF;AAAqBC,EAAAA;AAArB,CAAP,CAAP,CAAuDC,MAAvD,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport FormInput from \"../form-input/FormInput\";\nimport \"./Sign-in.scss\";\nimport CustomButton from \"../custom-button/CustomButton\";\n\nimport { connect } from \"react-redux\";\nimport {\n  googleSignInStart,\n  emailSignInStart\n} from \"../../redux/actions/userAction\";\n\nconst SignIn = ({ googleSignInStart, emailSignInStart }) => {\n  const [state, setState] = useState({ email: \"\", password: \"\" });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const { email, password } = state;\n    emailSignInStart({ email, password });\n  };\n\n  const handleChange = e => {\n    const { value, name } = e.target;\n    setState(state => ({ ...state, [name]: value }));\n  };\n  return (\n    <div className=\"sign-in\">\n      <h2>I already have account</h2>\n      <span>Sign In with your email and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          value={state.email}\n          required\n          handlChange={handleChange}\n          label=\"Email\"\n          autoComplete=\"off\"\n        />\n        <FormInput\n          name=\"password\"\n          type=\"password\"\n          value={state.password}\n          required\n          handlChange={handleChange}\n          label=\"Password\"\n          autoComplete=\"off\"\n        />\n        <div className=\"buttons\">\n          <CustomButton type=\"submit\">Sign In</CustomButton>\n          <CustomButton\n            type=\"button\"\n            onClick={googleSignInStart}\n            isGoogleSignIn\n          >\n            Sign in with Google\n          </CustomButton>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default connect(null, { googleSignInStart, emailSignInStart })(SignIn);\n"]},"metadata":{},"sourceType":"module"}