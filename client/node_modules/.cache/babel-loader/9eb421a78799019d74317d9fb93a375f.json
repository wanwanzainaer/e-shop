{"ast":null,"code":"import { createStore, compose, applyMiddleware } from \"redux\";\nimport reducer from \"./reducers\"; // import logger from \"redux-logger\";\n\nimport { persistStore } from \"redux-persist\"; // import thunk from \"redux-thunk\";\n\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./saga/root.saga\";\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // const middlewares = [logger];\n\nconst middlewares = [sagaMiddleware];\nexport const store = createStore(reducer, {}, composeEnhancers(applyMiddleware(...middlewares)));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/simon/react/2020-react/e-shop/client/src/redux/store.js"],"names":["createStore","compose","applyMiddleware","reducer","persistStore","createSagaMiddleware","rootSaga","sagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","middlewares","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,YAApB,C,CACA;;AACA,SAASC,YAAT,QAA6B,eAA7B,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AACA,MAAMG,gBAAgB,GACpBC,MAAM,CAACC,oCAAP,IAA+CT,OADjD,C,CAGA;;AACA,MAAMU,WAAW,GAAG,CAACJ,cAAD,CAApB;AACA,OAAO,MAAMK,KAAK,GAAGZ,WAAW,CAC9BG,OAD8B,EAE9B,EAF8B,EAG9BK,gBAAgB,CAACN,eAAe,CAAC,GAAGS,WAAJ,CAAhB,CAHc,CAAzB;AAKPJ,cAAc,CAACM,GAAf,CAAmBP,QAAnB;AACA,OAAO,MAAMQ,SAAS,GAAGV,YAAY,CAACQ,KAAD,CAA9B","sourcesContent":["import { createStore, compose, applyMiddleware } from \"redux\";\nimport reducer from \"./reducers\";\n// import logger from \"redux-logger\";\nimport { persistStore } from \"redux-persist\";\n// import thunk from \"redux-thunk\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./saga/root.saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers =\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// const middlewares = [logger];\nconst middlewares = [sagaMiddleware];\nexport const store = createStore(\n  reducer,\n  {},\n  composeEnhancers(applyMiddleware(...middlewares))\n);\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\n"]},"metadata":{},"sourceType":"module"}