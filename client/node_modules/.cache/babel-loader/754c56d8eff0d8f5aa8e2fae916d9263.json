{"ast":null,"code":"import _defineProperty from \"/Users/simon/react/2020-react/e-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport Types from \"../actions/types\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from \"../actions/userAction\";\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\nexport function* signinWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(Types.GOOGLE_SIGN_IN_START, signinWithGoogle);\n}\nexport function* signinWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(Types.EMAIL_SIGN_IN_START, signinWithEmail);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\nexport function* signUpWithEmailAndPassword({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (err) {\n    yield put(signUpFailure());\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(Types.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(Types.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (err) {\n    yield put(signOutFailure(err));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(Types.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(Types.SIGN_UP_START, signUpWithEmailAndPassword);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/Users/simon/react/2020-react/e-shop/client/src/redux/saga/user.saga.js"],"names":["takeLatest","put","all","call","Types","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutFailure","signOutSuccess","signUpFailure","signUpSuccess","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","err","message","signinWithGoogle","signInWithPopup","user","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signinWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","isUserAuthenticated","signUpWithEmailAndPassword","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onSignUpSuccess","SIGN_UP_SUCCESS","onCheckUserSession","CHECK_USER_SESSION","signOut","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSaga"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport Types from \"../actions/types\";\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser\n} from \"../../firebase/firebase.utils\";\nimport {\n  signInSuccess,\n  signInFailure,\n  signOutFailure,\n  signOutSuccess,\n  signUpFailure,\n  signUpSuccess\n} from \"../actions/userAction\";\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(\n      createUserProfileDocument,\n      userAuth,\n      additionalData\n    );\n    const userSnapshot = yield userRef.get();\n    yield put(\n      signInSuccess({\n        id: userSnapshot.id,\n        ...userSnapshot.data()\n      })\n    );\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\n\nexport function* signinWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(Types.GOOGLE_SIGN_IN_START, signinWithGoogle);\n}\n\nexport function* signinWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(\n      email,\n      password\n    );\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(Types.EMAIL_SIGN_IN_START, signinWithEmail);\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (err) {\n    yield put(signInFailure(err.message));\n  }\n}\n\nexport function* signUpWithEmailAndPassword({\n  payload: { email, password, displayName }\n}) {\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(\n      email,\n      password\n    );\n    yield put(\n      signUpSuccess({ user, additionalData: { displayName } })\n    );\n  } catch (err) {\n    yield put(signUpFailure());\n  }\n}\n\nexport function* signInAfterSignUp({\n  payload: { user, additionalData }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(Types.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(Types.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (err) {\n    yield put(signOutFailure(err));\n  }\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(Types.SIGN_OUT_START, signOut);\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(Types.SIGN_UP_START, signUpWithEmailAndPassword);\n}\n\nexport function* userSaga() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUpStart),\n    call(onSignUpSuccess)\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}